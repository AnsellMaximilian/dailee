{"version":3,"sources":["firebase/config.tsx","pages/SignUp.tsx","pages/SignIn.tsx","components/TaskForm.tsx","components/TaskDetail.tsx","components/CheckBox.tsx","components/TaskItem.tsx","components/TaskList.tsx","theme.ts","components/TaskReserveItem.tsx","components/TaskReserve.tsx","images/hero.svg","pages/Home.tsx","images/logo.svg","components/Header.tsx","components/Message.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignUp","setMessage","useState","email","setEmail","password","setPassword","fullName","setFullName","goals","setGoals","handleChange","e","target","name","value","Container","maxWidth","onSubmit","preventDefault","createUserWithEmailAndPassword","then","userRef","collection","doc","user","uid","set","type","content","catch","err","message","TextField","required","fullWidth","margin","variant","label","onChange","Button","color","SignIn","signInWithEmailAndPassword","useStyles","makeStyles","theme","toggleButton","backgroundColor","palette","grey","borderRadius","container","background","default","paddingBottom","spacing","boxShadow","shadows","header","padding","textTransform","fontWeight","primary","main","contrastText","shape","formContainer","formMode","display","justifyContent","flexDirection","TaskForm","classes","title","setTitle","description","setDescription","timeFrame","setTimeFrame","setformMode","Box","m","className","Typography","RadioGroup","aria-label","FormControlLabel","control","Radio","task","add","Grid","item","xs","multiline","placeholder","TaskDetail","open","handleClose","saveChange","Dialog","onClose","DialogTitle","DialogContent","onClick","id","checkBox","position","checked","top","right","transform","CheckBox","completeTask","IconButton","CheckBoxOutlineBlank","Stop","fontSize","taskItem","transition","action","hover","deleted","detail","whiteSpace","textAlign","border","divider","TaskItem","isOpen","setOpenTask","setOpenTaskDetail","setChecked","primaryText","ListItem","button","ListItemIcon","stopPropagation","Promise","resolve","reject","setTimeout","delete","ListItemText","ListItemSecondaryAction","Edit","Collapse","in","TaskList","tasks","openTask","openTaskDetail","taskItems","map","List","style","overflowX","filter","update","createMuiTheme","secondary","reserveTaskItem","TaskReserveItem","reserveTask","setDeleted","Publish","Delete","borderTopLeftRadius","borderTopRightRadius","bottom","maxHeight","minHeight","width","breakpoints","values","sm","up","list","overflowY","TaskReserve","reserveTasks","setIsTaskReserveOpen","reserveTaskItems","Slide","direction","window","innerWidth","mountOnEnter","unmountOnExit","ClickAwayListener","onClickAway","p","length","dense","taskReserveButton","mainContainer","heroImg","cta","textDecoration","hero","flexWrap","hero__title","marginBottom","heroLeft","down","heroRight","alignItems","Home","isTaskReserveOpen","currentUser","justify","md","Fab","state","ListAlt","src","alt","to","process","link","cursor","opacity","activeLink","toolbar","userInfo","flexGrow","brandContainer","height","left","Header","AppBar","Toolbar","brandSVG","signOut","activeClassName","error","info","success","Message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","App","setUser","setTasks","setReserveTasks","useEffect","listener","onAuthStateChanged","tasksListener","reserveTasksListener","where","onSnapshot","snapshot","docs","docSnapshot","data","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76dca2e1.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBkrMYcTX_d_K8SF-bFjpSFWNRTx6-jAcc\",\r\n    authDomain: \"dailee-f3d58.firebaseapp.com\",\r\n    projectId: \"dailee-f3d58\",\r\n    storageBucket: \"dailee-f3d58.appspot.com\",\r\n    messagingSenderId: \"903265997201\",\r\n    appId: \"1:903265997201:web:ea526b1fb4f9c122608a30\"\r\n}\r\n    // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth, firestore}","import { Button, Container, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase/config\";\r\nimport { Message } from \"../types\";\r\n\r\ninterface Props {\r\n  setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nexport default function SignUp({ setMessage }: Props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [goals, setGoals] = useState(\"\");\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userRef) => {\r\n        firestore\r\n          .collection(\"profiles\")\r\n          .doc(userRef.user?.uid)\r\n          .set({\r\n            fullName,\r\n            goals,\r\n          })\r\n          .then(() =>\r\n            setMessage({\r\n              type: \"success\",\r\n              content: `Successfully signed in as ${fullName}`,\r\n            })\r\n          );\r\n      })\r\n      .catch((err: { message: string }) =>\r\n        setMessage({ type: \"error\", content: err.message })\r\n      );\r\n  };\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    if (e.target.name === \"email\") setEmail(e.target.value);\r\n    else if (e.target.name === \"password\") setPassword(e.target.value);\r\n    else if (e.target.name === \"fullName\") setFullName(e.target.value);\r\n    else if (e.target.name === \"goals\") setGoals(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          type=\"email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={fullName}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Goals\"\r\n          name=\"goals\"\r\n          value={goals}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          type=\"password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Sign Up\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { auth } from \"../firebase/config\";\r\nimport { Button, Container, TextField } from \"@material-ui/core\";\r\nimport { Message } from \"../types\";\r\n\r\ninterface Props {\r\n  setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nexport default function SignIn({ setMessage }: Props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() =>\r\n        setMessage({\r\n          type: \"success\",\r\n          content: `Successfully signed in as ${email}`,\r\n        })\r\n      )\r\n      .catch((err: { message: string }) =>\r\n        setMessage({ type: \"error\", content: err.message })\r\n      );\r\n  };\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    if (e.target.name === \"email\") setEmail(e.target.value);\r\n    else if (e.target.name === \"password\") setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          type=\"email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          type=\"password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport firebase from \"firebase\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  user: firebase.User;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toggleButton: {\r\n    backgroundColor: theme.palette.grey[50],\r\n    borderRadius: 0,\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingBottom: theme.spacing(1),\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n\r\n  header: {\r\n    padding: theme.spacing(1),\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n\r\n  formContainer: {\r\n    margin: theme.spacing(2, \"auto\"),\r\n  },\r\n\r\n  formMode: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function TaskForm({ user }: Props) {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [timeFrame, setTimeFrame] = useState(\"\");\r\n  const [formMode, setformMode] = useState<\"tasks\" | \"reserveTasks\">(\"tasks\");\r\n\r\n  const handleChange: React.ChangeEventHandler<\r\n    HTMLTextAreaElement | HTMLInputElement\r\n  > = (e) => {\r\n    let value = e.target.value;\r\n\r\n    if (e.target.name === \"title\") setTitle(value);\r\n    else if (e.target.name === \"description\") setDescription(value);\r\n    else if (e.target.name === \"time-frame\") setTimeFrame(value);\r\n  };\r\n\r\n  const handleFormModeChange: React.ChangeEventHandler<HTMLInputElement> = (\r\n    e\r\n  ) => {\r\n    let value: \"tasks\" | \"reserveTasks\" =\r\n      e.target.value === \"reserveTasks\" ? \"reserveTasks\" : \"tasks\";\r\n    setformMode(value);\r\n  };\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n\r\n    let task = {\r\n      user: user.uid,\r\n      title,\r\n      description,\r\n      timeFrame,\r\n    };\r\n\r\n    firestore.collection(formMode).add(task).then().catch();\r\n\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setTimeFrame(\"\");\r\n  };\r\n\r\n  return (\r\n    <Box m={3} className={classes.container}>\r\n      <Typography className={classes.header}>Create Tasks</Typography>\r\n      <Container maxWidth=\"xs\" className={classes.formContainer}>\r\n        <RadioGroup\r\n          aria-label=\"formMode\"\r\n          name=\"form-mode\"\r\n          value={formMode}\r\n          onChange={handleFormModeChange}\r\n          className={classes.formMode}\r\n        >\r\n          <FormControlLabel value=\"tasks\" control={<Radio />} label=\"Tasks\" />\r\n          <FormControlLabel\r\n            value=\"reserveTasks\"\r\n            control={<Radio />}\r\n            label=\"Reserve Tasks\"\r\n          />\r\n        </RadioGroup>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                label=\"Task Title\"\r\n                onChange={handleChange}\r\n                value={title}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                type=\"time\"\r\n                name=\"time-frame\"\r\n                onChange={handleChange}\r\n                value={timeFrame}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                multiline\r\n                name=\"description\"\r\n                placeholder=\"Task Description\"\r\n                onChange={handleChange}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n","import { Button, Dialog, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Task } from '../types'\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    task: Task;\r\n    handleClose: ((event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void);\r\n    saveChange: (task: Task) => void;\r\n}\r\n\r\nexport default function TaskDetail({open, task, handleClose, saveChange}: Props) {\r\n\r\n    const [title, setTitle] = useState(task.title);\r\n    const [description, setDescription] = useState(task.description);\r\n    const [timeFrame, setTimeFrame] = useState(task.timeFrame);\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (e) => {\r\n        let value = e.target.value\r\n\r\n        if(e.target.name === 'title') setTitle(value)\r\n        else if(e.target.name === 'description') setDescription(value)\r\n        else if(e.target.name === 'time-frame') setTimeFrame(value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        saveChange({\r\n            id: task.id,\r\n            user: task.user,\r\n            title,\r\n            description,\r\n            timeFrame\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>\r\n                Edit Task\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <div>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={8}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth \r\n                                variant=\"outlined\" \r\n                                type=\"text\" \r\n                                name=\"title\" \r\n                                label=\"Task Title\" \r\n                                onChange={handleChange} \r\n                                value={title}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                type=\"time\" \r\n                                name=\"time-frame\" \r\n                                onChange={handleChange} \r\n                                value={timeFrame} \r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                multiline \r\n                                name=\"description\" \r\n                                placeholder=\"Task Description\" \r\n                                onChange={handleChange} \r\n                                value={description}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button fullWidth type=\"submit\" color=\"primary\" onClick={handleClick}>Save Changes</Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport { CheckBoxOutlineBlank, Stop } from '@material-ui/icons'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    checked: boolean;\r\n    completeTask: React.MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    checkBox: {\r\n        position: 'relative'\r\n    },\r\n\r\n    checked: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        right: \"50%\",\r\n        transform: \"translate(50%, -50%)\"\r\n    }\r\n}))\r\n\r\nexport default function CheckBox({checked, completeTask}: Props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <IconButton className={classes.checkBox} onClick={completeTask}>\r\n            <CheckBoxOutlineBlank color=\"primary\" />\r\n            {checked && <Stop color=\"primary\" className={classes.checked} fontSize=\"small\"/>}\r\n        </IconButton>\r\n    )\r\n}\r\n","import {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport { Task } from \"../types\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  task: Task;\r\n  setOpenTask: React.Dispatch<React.SetStateAction<string>>;\r\n  setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  taskItem: {\r\n    transition: \"transform 0.5s\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  deleted: {\r\n    transform: \"translateX(200%)\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  detail: {\r\n    whiteSpace: \"pre-line\",\r\n    textAlign: \"left\",\r\n    padding: theme.spacing(0, 4),\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1.5px solid ${theme.palette.divider}`,\r\n  },\r\n\r\n  timeFrame: {\r\n    color: theme.palette.grey[500],\r\n    fontSize: \"0.85rem\",\r\n  },\r\n}));\r\n\r\nexport default function TaskItem({\r\n  task,\r\n  isOpen,\r\n  setOpenTask,\r\n  setOpenTaskDetail,\r\n}: Props) {\r\n  const classes = useStyles();\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const completeTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    e.stopPropagation();\r\n    setChecked(true);\r\n    new Promise<void>((resolve, reject) => {\r\n      setTimeout(() => resolve(), 500);\r\n    }).then(() => {\r\n      firestore.collection(\"tasks\").doc(task.id).delete();\r\n    });\r\n  };\r\n\r\n  const toggleDetails = () => {\r\n    // if details already open; close\r\n    if (isOpen) setOpenTask(\"\");\r\n    else setOpenTask(task.id);\r\n  };\r\n\r\n  const primaryText = (\r\n    <span>\r\n      {task.title}\r\n      {!!(task.timeFrame && task.timeFrame !== \"00:00\") && (\r\n        <span className={classes.timeFrame}> - {task.timeFrame}</span>\r\n      )}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        className={`${classes.taskItem} ${checked && classes.deleted}`}\r\n        onClick={toggleDetails}\r\n      >\r\n        <ListItemIcon>\r\n          <CheckBox checked={checked} completeTask={completeTask} />\r\n        </ListItemIcon>\r\n        <ListItemText primary={primaryText} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton onClick={() => setOpenTaskDetail(task.id)}>\r\n            <EditIcon color=\"primary\" />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Collapse in={isOpen}>\r\n        <Box className={task.description && classes.detail}>\r\n          <Typography>{task.description}</Typography>\r\n        </Box>\r\n        {/* <Box className={task.description && classes.detail} borderTop={0}>\r\n                <Typography>\r\n                    {task.description}\r\n                </Typography>\r\n            </Box> */}\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import { Box, List, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport { Task } from \"../types\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: theme.spacing(1),\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n\r\n  container: {\r\n    backgroundColor: theme.palette.background.default,\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n}));\r\n\r\nexport default function TaskList({ tasks }: { tasks: Task[] }) {\r\n  const classes = useStyles();\r\n  // which task is expanded -- details are revealed\r\n  const [openTask, setOpenTask] = useState(\"\");\r\n  const [openTaskDetail, setOpenTaskDetail] = useState(\"\");\r\n\r\n  const handleTaskDetailClose = () => setOpenTaskDetail(\"\");\r\n\r\n  const saveChange = (task: Task) => {\r\n    firestore.collection(\"tasks\").doc(task.id).update(task);\r\n    setOpenTaskDetail(\"\");\r\n  };\r\n\r\n  const taskItems = tasks.map((task) => (\r\n    <TaskItem\r\n      task={task}\r\n      key={task.id}\r\n      isOpen={openTask === task.id}\r\n      setOpenTask={setOpenTask}\r\n      setOpenTaskDetail={setOpenTaskDetail}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Box m={3} className={classes.container}>\r\n      <Typography className={classes.header}>Your Tasks</Typography>\r\n      <List style={{ overflowX: \"hidden\" }}>{taskItems}</List>\r\n      {!!openTaskDetail && (\r\n        <TaskDetail\r\n          task={tasks.filter((task) => task.id === openTaskDetail)[0]}\r\n          open={!!openTaskDetail}\r\n          handleClose={handleTaskDetailClose}\r\n          saveChange={saveChange}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2a7fff',\r\n    },\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport default theme;","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Delete, Publish } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config'\r\nimport { Task, Message } from '../types'\r\nimport firebase from 'firebase'\r\n\r\ninterface Props {\r\n    reserveTask: Task;\r\n    user: firebase.User;\r\n    setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    reserveTaskItem: {\r\n        transition: \"all 0.5s\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    deleted: {\r\n        transform: \"translateX(-200%)\",\r\n        position: \"relative\"\r\n    }\r\n}))\r\n\r\nexport default function TaskReserveItem({reserveTask, user, setOpenTaskDetail, setMessage}: Props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [deleted, setDeleted] = useState(false)\r\n\r\n    const deleteReserveTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.stopPropagation();\r\n        setDeleted(true);\r\n\r\n        setTimeout(() => {\r\n            firestore.collection('reserveTasks').doc(reserveTask.id).delete();\r\n        }, 500);\r\n    }\r\n\r\n    const transferReserveTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.stopPropagation();\r\n        firestore.collection('tasks').add({\r\n            title: reserveTask.title,\r\n            description: reserveTask.description,\r\n            timeFrame: reserveTask.timeFrame,\r\n            user: user.uid\r\n        })\r\n        .then(() => {\r\n            setMessage({type: \"success\", content: `Reserve Task \"${reserveTask.title}\" Transferred to Tasks`})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ListItem button className={`${classes.reserveTaskItem} ${deleted && classes.deleted}`} onClick={() => setOpenTaskDetail(reserveTask.id)}>\r\n            <ListItemIcon>\r\n                <IconButton color=\"primary\" onClick={transferReserveTask}>\r\n                    <Publish/>\r\n                </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText>{reserveTask.title}</ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <IconButton style={{color: 'red'}} onClick={deleteReserveTask}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n","import { Box, ClickAwayListener, Container, List, makeStyles, Slide, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport theme from '../theme'\r\nimport { Task, Message } from '../types'\r\nimport TaskReserveItem from './TaskReserveItem'\r\nimport firebase from 'firebase'\r\nimport { firestore } from '../firebase/config'\r\nimport TaskDetail from './TaskDetail'\r\n\r\ninterface Props {\r\n    reserveTasks: Task[];\r\n    open: boolean;\r\n    user: firebase.User;\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n    setIsTaskReserveOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    container: {\r\n        backgroundColor: theme.palette.grey[50],\r\n        position: 'fixed',\r\n        bottom: 50,\r\n        maxHeight: '100vh',\r\n        minHeight: 150,\r\n        boxShadow: theme.shadows[3],\r\n        padding: 0,\r\n        width: '85%',\r\n        margin: '0 7.5%',\r\n        maxWidth: theme.breakpoints.values.sm,\r\n        borderRadius: theme.shape.borderRadius,\r\n        [theme.breakpoints.up('sm')]:{\r\n            right: 0\r\n        }\r\n    },\r\n\r\n    list: {\r\n        overflowY: 'auto',\r\n        maxHeight: '75vh'\r\n    }\r\n}))\r\n\r\nexport default function TaskReserve({reserveTasks, open, user, setMessage, setIsTaskReserveOpen}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [openTaskDetail, setOpenTaskDetail] = useState('');\r\n\r\n    const handleTaskDetailClose = () => setOpenTaskDetail('');\r\n\r\n    const saveChange = (reserveTask: Task) => {\r\n        firestore.collection('reserveTasks').doc(reserveTask.id).update(reserveTask);\r\n        setOpenTaskDetail('');\r\n    }\r\n\r\n    const reserveTaskItems = reserveTasks.map(task => (\r\n        <TaskReserveItem\r\n            setMessage={setMessage}\r\n            reserveTask={task} \r\n            key={task.id} \r\n            user={user}\r\n            setOpenTaskDetail={setOpenTaskDetail}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Slide direction={window.innerWidth >= theme.breakpoints.values.sm ? 'left' : 'up'} in={open} mountOnEnter unmountOnExit>\r\n            <Container className={classes.container}>\r\n                <ClickAwayListener onClickAway={() => setIsTaskReserveOpen(false)}>\r\n                    <div>\r\n                        <Box p={1} className={classes.header}>\r\n                            <Typography>Task Reserve</Typography>\r\n                        </Box>\r\n                        {reserveTasks.length > 0 ?\r\n                            <>\r\n                            <List dense className={classes.list}>\r\n                                {reserveTaskItems}\r\n                            </List>\r\n                            {!!openTaskDetail &&\r\n                                <TaskDetail \r\n                                    task={reserveTasks.filter(task => task.id === openTaskDetail)[0]} \r\n                                    open={!!openTaskDetail}\r\n                                    handleClose={handleTaskDetailClose}\r\n                                    saveChange={saveChange}\r\n                                />\r\n                            }\r\n                            </>\r\n                            :\r\n                            <Typography>Get Yo Tasks</Typography>\r\n                        }\r\n                    </div>\r\n                </ClickAwayListener>\r\n            </Container>\r\n        </Slide>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hero.2316fa7f.svg\";","import React, { useState } from \"react\";\r\nimport { auth } from \"../firebase/config\";\r\n\r\nimport TaskForm from \"../components/TaskForm\";\r\nimport { Message, Task } from \"../types\";\r\nimport TaskList from \"../components/TaskList\";\r\nimport { Box, Fab, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { ListAlt } from \"@material-ui/icons\";\r\nimport TaskReserve from \"../components/TaskReserve\";\r\n\r\nimport heroImg from \"../images/hero.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  tasks: Task[];\r\n  reserveTasks: Task[];\r\n  setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  taskReserveButton: {\r\n    position: \"fixed\",\r\n    bottom: 15,\r\n    right: 15,\r\n  },\r\n\r\n  mainContainer: {\r\n    minHeight: \"100vh\",\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n\r\n  heroImg: {\r\n    maxWidth: \"100%\",\r\n    width: 400,\r\n  },\r\n\r\n  cta: {\r\n    display: \"inline-block\",\r\n    padding: theme.spacing(1, 5),\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: theme.shape.borderRadius,\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      filter: \"brightness(0.9)\",\r\n    },\r\n  },\r\n\r\n  hero: {\r\n    padding: theme.spacing(5),\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  hero__title: {\r\n    marginBottom: theme.spacing(3),\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  heroLeft: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n\r\n  heroRight: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"left\",\r\n    \"&> div > h2\": {\r\n      fontSize: \"3rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Home({ tasks, reserveTasks, setMessage }: Props) {\r\n  const classes = useStyles();\r\n\r\n  const [isTaskReserveOpen, setIsTaskReserveOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {auth.currentUser ? (\r\n        <div className={classes.mainContainer}>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={5}>\r\n              <TaskForm user={auth.currentUser} />\r\n            </Grid>\r\n            <Grid item xs={12} md={7}>\r\n              <TaskList tasks={tasks} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <TaskReserve\r\n            reserveTasks={reserveTasks}\r\n            open={isTaskReserveOpen}\r\n            user={auth.currentUser}\r\n            setMessage={setMessage}\r\n            setIsTaskReserveOpen={setIsTaskReserveOpen}\r\n          />\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            title=\"Task Reserve\"\r\n            className={classes.taskReserveButton}\r\n            onClick={() => setIsTaskReserveOpen((state) => !state)}\r\n          >\r\n            <ListAlt />\r\n          </Fab>\r\n        </div>\r\n      ) : (\r\n        <Box m={2} className={classes.hero}>\r\n          <Box className={classes.heroLeft}>\r\n            <img src={heroImg} alt=\"hero\" className={classes.heroImg} />\r\n          </Box>\r\n          <Box className={classes.heroRight}>\r\n            <div>\r\n              <Typography variant=\"h2\" className={classes.hero__title}>\r\n                Start managing your <span>tasks</span>.\r\n              </Typography>\r\n              <NavLink\r\n                to={process.env.PUBLIC_URL + \"/signup\"}\r\n                className={classes.cta}\r\n              >\r\n                Sign Up\r\n              </NavLink>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.9ec56e1c.svg\";","import { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/config\";\r\n\r\nimport brandSVG from \"../images/logo.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: \"inherit\",\r\n    cursor: \"pointer\",\r\n    opacity: 0.75,\r\n    textDecoration: \"none\",\r\n    margin: theme.spacing(0, 1),\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n\r\n  activeLink: {\r\n    opacity: 1,\r\n  },\r\n\r\n  toolbar: {\r\n    flexWrap: \"wrap\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  userInfo: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  brandContainer: {\r\n    width: 100,\r\n    height: \"125%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.default,\r\n    boxShadow: theme.shadows[4],\r\n    borderRadius: \"0 0 50% 50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    top: \"0\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    transition: \"all 0.25s\",\r\n    \"& img\": {\r\n      // height: \"60%\",\r\n      width: \"50%\",\r\n    },\r\n    \"&:hover\": {\r\n      height: \"200%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <NavLink\r\n          to={process.env.PUBLIC_URL + \"/\"}\r\n          className={classes.brandContainer}\r\n        >\r\n          <img src={brandSVG} alt=\"brand\" />\r\n        </NavLink>\r\n        <Typography className={classes.userInfo}>\r\n          {auth.currentUser?.email}\r\n        </Typography>\r\n        <nav>\r\n          {!auth.currentUser ? (\r\n            <>\r\n              <NavLink\r\n                to={process.env.PUBLIC_URL + \"/signup\"}\r\n                className={classes.link}\r\n                activeClassName={classes.activeLink}\r\n              >\r\n                Sign Up\r\n              </NavLink>\r\n              <NavLink\r\n                to={process.env.PUBLIC_URL + \"/signin\"}\r\n                className={classes.link}\r\n                activeClassName={classes.activeLink}\r\n              >\r\n                Sign In\r\n              </NavLink>\r\n            </>\r\n          ) : (\r\n            <span\r\n              color=\"inherit\"\r\n              className={classes.link}\r\n              onClick={() => auth.signOut()}\r\n            >\r\n              Sign Out\r\n            </span>\r\n          )}\r\n        </nav>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Box, makeStyles, Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Message as MessageType} from '../types'\r\n\r\ninterface Props {\r\n    message: MessageType | null;\r\n    open: boolean\r\n    handleClose: ((event: React.SyntheticEvent<any, Event>) => void)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    message: {\r\n        color: theme.palette.grey[50],\r\n        padding: theme.spacing(1),\r\n        borderRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.main\r\n    },\r\n\r\n    info: {\r\n        backgroundColor: theme.palette.info.main\r\n    },\r\n\r\n    success: {\r\n        backgroundColor: theme.palette.success.main\r\n    }\r\n}))\r\n\r\nexport default function Message({message, open, handleClose}: Props) {\r\n    const classes = useStyles();\r\n    if(message) {\r\n        let className: string;\r\n        switch (message.type) {\r\n            case 'error':\r\n                className = classes.error;\r\n                break;\r\n            case 'success':\r\n                className = classes.success;\r\n                break;\r\n            case 'info':\r\n                className = classes.info;\r\n                break;\r\n            default:\r\n                className = classes.info;\r\n                break;\r\n        }\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                // message={message.content}\r\n                // className={classes.message}\r\n            >\r\n                <Box className={`${classes.message} ${className}`}>\r\n                    {message.content}\r\n                </Box>\r\n            </Snackbar>\r\n        )\r\n    }\r\n        \r\n    return null;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport firebase from \"firebase\";\r\n\r\nimport SignUp from \"./pages/SignUp\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport Home from \"./pages/Home\";\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nimport \"./App.css\";\r\nimport { auth, firestore } from \"./firebase/config\";\r\nimport { Message as MessageType, Task } from \"./types\";\r\nimport theme from \"./theme\";\r\nimport Message from \"./components/Message\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(auth.currentUser);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [reserveTasks, setReserveTasks] = useState<Task[]>([]);\r\n  const [message, setMessage] = useState<MessageType | null>(null);\r\n\r\n  useEffect(() => {\r\n    const listener = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n\r\n    return () => listener();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let tasksListener: firebase.Unsubscribe | null;\r\n    let reserveTasksListener: firebase.Unsubscribe | null;\r\n    if (user) {\r\n      tasksListener = firestore\r\n        .collection(\"tasks\")\r\n        .where(\"user\", \"==\", user.uid)\r\n        .onSnapshot((snapshot) => {\r\n          let tasks: Task[] = snapshot.docs.map((docSnapshot) => {\r\n            let task: Task = {\r\n              id: docSnapshot.id,\r\n              user: user.uid,\r\n              title: \"Unavailable\",\r\n              description: \"Unavailable\",\r\n              timeFrame: \"Unavailable\",\r\n              ...docSnapshot.data(),\r\n            };\r\n            return task;\r\n          });\r\n          setTasks(tasks);\r\n        });\r\n\r\n      reserveTasksListener = firestore\r\n        .collection(\"reserveTasks\")\r\n        .where(\"user\", \"==\", user.uid)\r\n        .onSnapshot((snapshot) => {\r\n          let reserveTasks: Task[] = snapshot.docs.map((docSnapshot) => {\r\n            let reserveTask: Task = {\r\n              id: docSnapshot.id,\r\n              user: user.uid,\r\n              title: \"Unavailable\",\r\n              description: \"Unavailable\",\r\n              timeFrame: \"Unavailable\",\r\n              ...docSnapshot.data(),\r\n            };\r\n            return reserveTask;\r\n          });\r\n          setReserveTasks(reserveTasks);\r\n        });\r\n    }\r\n    return () => {\r\n      tasksListener && tasksListener();\r\n      reserveTasksListener && reserveTasksListener();\r\n    };\r\n  }, [user]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/\"}>\r\n              <Home\r\n                tasks={tasks}\r\n                reserveTasks={reserveTasks}\r\n                setMessage={setMessage}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path={process.env.PUBLIC_URL + \"/signup\"}>\r\n              {user ? (\r\n                <Redirect to={process.env.PUBLIC_URL + \"/\"} />\r\n              ) : (\r\n                <SignUp setMessage={setMessage} />\r\n              )}\r\n            </Route>\r\n\r\n            <Route exact path={process.env.PUBLIC_URL + \"/signin\"}>\r\n              {user ? (\r\n                <Redirect to={process.env.PUBLIC_URL + \"/\"} />\r\n              ) : (\r\n                <SignIn setMessage={setMessage} />\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n          <Message\r\n            open={!!message}\r\n            message={message}\r\n            handleClose={() => {\r\n              setMessage(null);\r\n            }}\r\n          />\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}