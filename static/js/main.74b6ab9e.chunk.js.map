{"version":3,"sources":["firebase/config.tsx","pages/SignUp.tsx","pages/SignIn.tsx","components/TaskForm.tsx","components/TaskDetail.tsx","components/CheckBox.tsx","components/TaskItem.tsx","components/TaskList.tsx","theme.ts","components/TaskReserveItem.tsx","components/TaskReserve.tsx","pages/Home.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignUp","setError","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","Container","maxWidth","onSubmit","preventDefault","createUserWithEmailAndPassword","then","catch","err","message","TextField","required","fullWidth","type","margin","variant","label","onChange","Button","color","SignIn","signInWithEmailAndPassword","useStyles","makeStyles","theme","toggleButton","backgroundColor","palette","grey","borderRadius","formContainer","spacing","formMode","display","justifyContent","flexDirection","TaskForm","user","classes","title","setTitle","description","setDescription","timeFrame","setTimeFrame","isFormOpen","setIsFormOpen","setformMode","onClick","state","className","Typography","Collapse","in","RadioGroup","aria-label","FormControlLabel","control","Radio","task","uid","collection","add","Grid","container","item","xs","multiline","placeholder","TaskDetail","open","handleClose","saveChange","Dialog","onClose","DialogTitle","DialogContent","id","checkBox","position","checked","top","right","transform","CheckBox","completeTask","IconButton","CheckBoxOutlineBlank","Stop","fontSize","taskItem","transition","action","hover","deleted","detail","whiteSpace","textAlign","padding","shape","border","divider","TaskItem","isOpen","setOpenTask","setOpenTaskDetail","setChecked","ListItem","button","ListItemIcon","Promise","resolve","reject","setTimeout","doc","delete","ListItemText","primary","ListItemSecondaryAction","Edit","Box","borderTop","TaskList","tasks","openTask","openTaskDetail","taskItems","map","List","style","overflowX","filter","update","createMuiTheme","main","secondary","thme","reserveTaskItem","TaskReserveItem","reserveTask","setDeleted","Publish","Delete","header","contrastText","borderTopLeftRadius","borderTopRightRadius","bottom","maxHeight","minHeight","boxShadow","shadows","width","breakpoints","values","sm","up","TaskReserve","reserveTasks","reserveTaskItems","Slide","direction","window","innerWidth","mountOnEnter","unmountOnExit","p","length","dense","taskReserveButton","Home","isTaskReserveOpen","setIsTaskReserveOpen","currentUser","Fab","ListAlt","link","cursor","textTransform","activeLink","textDecoration","toolbar","flexWrap","userInfo","flexGrow","Header","AppBar","Toolbar","Link","signOut","to","activeClassName","App","setUser","setTasks","setReserveTasks","error","useEffect","onAuthStateChanged","where","onSnapshot","snapshot","docs","docSnapshot","data","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74b6ab9e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBkrMYcTX_d_K8SF-bFjpSFWNRTx6-jAcc\",\r\n    authDomain: \"dailee-f3d58.firebaseapp.com\",\r\n    projectId: \"dailee-f3d58\",\r\n    storageBucket: \"dailee-f3d58.appspot.com\",\r\n    messagingSenderId: \"903265997201\",\r\n    appId: \"1:903265997201:web:ea526b1fb4f9c122608a30\"\r\n}\r\n    // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth, firestore}","import { Button, Container, TextField } from '@material-ui/core';\r\nimport React, {useState} from 'react'\r\nimport {auth} from '../firebase/config';\r\n\r\ninterface Props {\r\n    setError: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport default function SignUp({setError}: Props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(() => setError(''))\r\n            .catch((err: {message: string}) => setError(err.message));\r\n    }\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if(e.target.name === \"email\") setEmail(e.target.value);\r\n        else if(e.target.name === \"password\") setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField required fullWidth type=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" name=\"email\" value={email} onChange={handleChange}/>\r\n                <TextField required fullWidth type=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" name=\"password\" value={password} onChange={handleChange}/>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {auth} from '../firebase/config';\r\nimport { Button, Container, TextField } from '@material-ui/core'\r\n\r\ninterface Props {\r\n    setError: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport default function SignIn({setError}: Props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(() => setError(''))\r\n            .catch((err: {message: string}) => setError(err.message));\r\n    }\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if(e.target.name === \"email\") setEmail(e.target.value);\r\n        else if(e.target.name === \"password\") setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField required fullWidth type=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" name=\"email\" value={email} onChange={handleChange}/>\r\n                <TextField required fullWidth type=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" name=\"password\" value={password} onChange={handleChange}/>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign In</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\nimport firebase from 'firebase';\r\nimport { Button, Collapse, Container, FormControlLabel, Grid, makeStyles, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\n// import { ExpandMore } from '@material-ui/icons';\r\n\r\ninterface Props {\r\n    user: firebase.User\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toggleButton: {\r\n        backgroundColor: theme.palette.grey[50],\r\n        borderRadius: 0\r\n    },\r\n\r\n    formContainer: {\r\n        margin: theme.spacing(2, 'auto')\r\n    },\r\n\r\n    formMode: {\r\n        display: 'flex',\r\n        justifyContent: 'start',\r\n        flexDirection: 'row'\r\n    }\r\n}))\r\n\r\nexport default function TaskForm({user}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [timeFrame, setTimeFrame] = useState('');\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    const [formMode, setformMode] = useState<'tasks' | 'reserveTasks'>('tasks');\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (e) => {\r\n        let value = e.target.value\r\n\r\n        if(e.target.name === 'title') setTitle(value)\r\n        else if(e.target.name === 'description') setDescription(value)\r\n        else if(e.target.name === 'time-frame') setTimeFrame(value)\r\n    }\r\n\r\n    const handleFormModeChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        let value: 'tasks' | 'reserveTasks' = e.target.value === 'reserveTasks' ? 'reserveTasks' : 'tasks';\r\n        setformMode(value); \r\n    };\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n\r\n        let task = { \r\n            user: user.uid,\r\n            title,\r\n            description,\r\n            timeFrame\r\n        }\r\n\r\n        firestore.collection(formMode).add(task)\r\n            .then()\r\n            .catch();\r\n        \r\n        setTitle('');\r\n        setDescription('');\r\n        setTimeFrame('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button \r\n                fullWidth\r\n                variant=\"contained\"\r\n                onClick={() => setIsFormOpen(state => !state)}\r\n                className={classes.toggleButton}\r\n            >\r\n                <Typography>Create Task</Typography>\r\n            </Button>\r\n            <Collapse in={isFormOpen}>\r\n                <Container maxWidth=\"xs\" className={classes.formContainer}>\r\n                    <RadioGroup \r\n                        aria-label=\"formMode\" \r\n                        name=\"form-mode\" \r\n                        value={formMode} \r\n                        onChange={handleFormModeChange}\r\n                        className={classes.formMode}\r\n                    >\r\n                        <FormControlLabel value=\"tasks\" control={<Radio />} label=\"Tasks\" />\r\n                        <FormControlLabel value=\"reserveTasks\" control={<Radio />} label=\"Reserve Tasks\" />\r\n                    </RadioGroup>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth \r\n                                    variant=\"outlined\" \r\n                                    type=\"text\" \r\n                                    name=\"title\" \r\n                                    label=\"Task Title\" \r\n                                    onChange={handleChange} \r\n                                    value={title}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\" \r\n                                    type=\"time\" \r\n                                    name=\"time-frame\" \r\n                                    onChange={handleChange} \r\n                                    value={timeFrame} \r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\" \r\n                                    multiline \r\n                                    name=\"description\" \r\n                                    placeholder=\"Task Description\" \r\n                                    onChange={handleChange} \r\n                                    value={description}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">Add</Button>\r\n                            </Grid>\r\n                            \r\n                            \r\n                        </Grid>\r\n                    </form>\r\n                </Container>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Dialog, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Task } from '../types'\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    task: Task;\r\n    handleClose: ((event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void);\r\n    saveChange: (task: Task) => void;\r\n}\r\n\r\nexport default function TaskDetail({open, task, handleClose, saveChange}: Props) {\r\n\r\n    const [title, setTitle] = useState(task.title);\r\n    const [description, setDescription] = useState(task.description);\r\n    const [timeFrame, setTimeFrame] = useState(task.timeFrame);\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (e) => {\r\n        let value = e.target.value\r\n\r\n        if(e.target.name === 'title') setTitle(value)\r\n        else if(e.target.name === 'description') setDescription(value)\r\n        else if(e.target.name === 'time-frame') setTimeFrame(value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        saveChange({\r\n            id: task.id,\r\n            user: task.user,\r\n            title,\r\n            description,\r\n            timeFrame\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>\r\n                Edit Task\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <div>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={8}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth \r\n                                variant=\"outlined\" \r\n                                type=\"text\" \r\n                                name=\"title\" \r\n                                label=\"Task Title\" \r\n                                onChange={handleChange} \r\n                                value={title}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                type=\"time\" \r\n                                name=\"time-frame\" \r\n                                onChange={handleChange} \r\n                                value={timeFrame} \r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                multiline \r\n                                name=\"description\" \r\n                                placeholder=\"Task Description\" \r\n                                onChange={handleChange} \r\n                                value={description}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button fullWidth type=\"submit\" color=\"primary\" onClick={handleClick}>Save Changes</Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport { CheckBoxOutlineBlank, Stop } from '@material-ui/icons'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    checked: boolean;\r\n    completeTask: React.MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    checkBox: {\r\n        position: 'relative'\r\n    },\r\n\r\n    checked: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        right: \"50%\",\r\n        transform: \"translate(50%, -50%)\"\r\n    }\r\n}))\r\n\r\nexport default function CheckBox({checked, completeTask}: Props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <IconButton className={classes.checkBox} onClick={completeTask}>\r\n            <CheckBoxOutlineBlank color=\"primary\" />\r\n            {checked && <Stop color=\"primary\" className={classes.checked} fontSize=\"small\"/>}\r\n        </IconButton>\r\n    )\r\n}\r\n","import { Box, Collapse, IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, makeStyles, Typography } from '@material-ui/core'\r\nimport { Edit as EditIcon } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config'\r\nimport { Task } from '../types'\r\nimport CheckBox from './CheckBox'\r\n\r\ninterface Props {\r\n    isOpen: boolean;\r\n    task: Task;\r\n    setOpenTask: React.Dispatch<React.SetStateAction<string>>;\r\n    setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    taskItem: {\r\n        transition: \"transform 0.5s\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    deleted: {\r\n        transform: \"translateX(200%)\",\r\n        position: \"relative\"\r\n    },\r\n\r\n    detail: {\r\n        whiteSpace: 'pre-line',\r\n        textAlign: 'left',\r\n        padding: theme.spacing(0, 4),\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1.5px solid ${theme.palette.divider}`\r\n    }\r\n}))\r\n\r\nexport default function TaskItem({task, isOpen, setOpenTask, setOpenTaskDetail}: Props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const completeTask = () => {\r\n        setChecked(true);\r\n        (new Promise<void>((resolve, reject) => {\r\n            setTimeout(() => resolve(), 500)\r\n        })).then(() => {\r\n            firestore.collection('tasks').doc(task.id).delete();\r\n        })\r\n    }\r\n\r\n    const toggleDetails = () => {\r\n        // if details already open; close\r\n        if(isOpen) setOpenTask('');\r\n        else setOpenTask(task.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ListItem button className={`${classes.taskItem} ${checked && classes.deleted}`} onClick={toggleDetails}>\r\n            <ListItemIcon>  \r\n                <CheckBox checked={checked} completeTask={completeTask}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={task.title}/>\r\n            <ListItemSecondaryAction>\r\n                <IconButton onClick={() => setOpenTaskDetail(task.id)}>\r\n                    <EditIcon color=\"primary\"/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n         <Collapse in={isOpen}>\r\n            <Box className={task.description && classes.detail} borderTop={0}>\r\n                <Typography>\r\n                    {task.description}\r\n                </Typography>\r\n            </Box>\r\n        </Collapse>\r\n        </>\r\n    )\r\n}\r\n","import { Container, List } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\nimport { Task } from '../types'\r\nimport TaskDetail from './TaskDetail';\r\nimport TaskItem from './TaskItem'\r\n\r\nexport default function TaskList({tasks}: {tasks: Task[]}) {\r\n    // which task is expanded -- details are revealed\r\n    const [openTask, setOpenTask] = useState('');\r\n    const [openTaskDetail, setOpenTaskDetail] = useState('');\r\n\r\n    const handleTaskDetailClose = () => setOpenTaskDetail('');\r\n\r\n    const saveChange = (task: Task) => {\r\n        firestore.collection('tasks').doc(task.id).update(task);\r\n        setOpenTaskDetail('');\r\n    }\r\n\r\n    const taskItems = tasks.map(task => (\r\n        <TaskItem \r\n            task={task} \r\n            key={task.id} \r\n            isOpen={openTask === task.id}\r\n            setOpenTask={setOpenTask}\r\n            setOpenTaskDetail={setOpenTaskDetail}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <List style={{overflowX: \"hidden\"}}>\r\n                {taskItems}\r\n            </List>\r\n            {!!openTaskDetail &&\r\n                <TaskDetail \r\n                    task={tasks.filter(task => task.id === openTaskDetail)[0]} \r\n                    open={!!openTaskDetail}\r\n                    handleClose={handleTaskDetailClose}\r\n                    saveChange={saveChange}\r\n                />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2a7fff',\r\n    },\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport default theme;","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Delete, Publish } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config'\r\nimport { Task } from '../types'\r\nimport firebase from 'firebase'\r\n\r\ninterface Props {\r\n    reserveTask: Task;\r\n    user: firebase.User;\r\n    setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst useStyles = makeStyles(thme => ({\r\n    reserveTaskItem: {\r\n        transition: \"all 0.5s\",\r\n    },\r\n    deleted: {\r\n        transform: \"translateX(-200%)\",\r\n        position: \"relative\"\r\n    }\r\n}))\r\n\r\nexport default function TaskReserveItem({reserveTask, user, setOpenTaskDetail}: Props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [deleted, setDeleted] = useState(false)\r\n\r\n    const deleteReserveTask = () => {\r\n        setDeleted(true);\r\n\r\n        setTimeout(() => {\r\n            firestore.collection('reserveTasks').doc(reserveTask.id).delete();\r\n        }, 500);\r\n    }\r\n\r\n    const transferReserveTask = () => {\r\n        firestore.collection('tasks').add({\r\n            title: reserveTask.title,\r\n            description: reserveTask.description,\r\n            timeFrame: reserveTask.timeFrame,\r\n            user: user.uid\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ListItem button className={`${classes.reserveTaskItem} ${deleted && classes.deleted}`} onClick={() => setOpenTaskDetail(reserveTask.id)}>\r\n            <ListItemIcon>\r\n                <IconButton color=\"primary\" onClick={transferReserveTask}>\r\n                    <Publish/>\r\n                </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText>{reserveTask.title}</ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <IconButton style={{color: 'red'}} onClick={deleteReserveTask}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n","import { Box, Container, List, makeStyles, Slide, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport theme from '../theme'\r\nimport { Task } from '../types'\r\nimport TaskReserveItem from './TaskReserveItem'\r\nimport firebase from 'firebase'\r\nimport { firestore } from '../firebase/config'\r\nimport TaskDetail from './TaskDetail'\r\n\r\ninterface Props {\r\n    reserveTasks: Task[];\r\n    open: boolean;\r\n    user: firebase.User;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    container: {\r\n        backgroundColor: theme.palette.grey[50],\r\n        position: 'fixed',\r\n        bottom: 50,\r\n        maxHeight: '100vh',\r\n        minHeight: 150,\r\n        boxShadow: theme.shadows[3],\r\n        padding: 0,\r\n        width: '85%',\r\n        margin: '0 7.5%',\r\n        maxWidth: theme.breakpoints.values.sm,\r\n        borderRadius: theme.shape.borderRadius,\r\n        [theme.breakpoints.up('sm')]:{\r\n            right: 0\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function TaskReserve({reserveTasks, open, user}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [openTaskDetail, setOpenTaskDetail] = useState('');\r\n\r\n    const handleTaskDetailClose = () => setOpenTaskDetail('');\r\n\r\n    const saveChange = (reserveTask: Task) => {\r\n        firestore.collection('reserveTasks').doc(reserveTask.id).update(reserveTask);\r\n        setOpenTaskDetail('');\r\n    }\r\n\r\n    const reserveTaskItems = reserveTasks.map(task => (\r\n        <TaskReserveItem \r\n            reserveTask={task} \r\n            key={task.id} \r\n            user={user}\r\n            setOpenTaskDetail={setOpenTaskDetail}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Slide direction={window.innerWidth >= theme.breakpoints.values.sm ? 'left' : 'up'} in={open} mountOnEnter unmountOnExit>\r\n            <Container className={classes.container}>\r\n                <Box p={1} className={classes.header}>\r\n                    <Typography>Task Reserve</Typography>\r\n                </Box>\r\n                {reserveTasks.length > 0 ?\r\n                    <>\r\n                    <List dense>\r\n                        {reserveTaskItems}\r\n                    </List>\r\n                    {!!openTaskDetail &&\r\n                        <TaskDetail \r\n                            task={reserveTasks.filter(task => task.id === openTaskDetail)[0]} \r\n                            open={!!openTaskDetail}\r\n                            handleClose={handleTaskDetailClose}\r\n                            saveChange={saveChange}\r\n                        />\r\n                    }\r\n                    </>\r\n                    :\r\n                    <Typography>Get Yo Tasks</Typography>\r\n                }\r\n            </Container>\r\n        </Slide>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { auth } from '../firebase/config'\r\n\r\nimport TaskForm from '../components/TaskForm'\r\nimport { Task } from '../types'\r\nimport TaskList from '../components/TaskList'\r\nimport { Fab, makeStyles } from '@material-ui/core'\r\nimport { ListAlt } from '@material-ui/icons'\r\nimport TaskReserve from '../components/TaskReserve'\r\n\r\ninterface Props {\r\n    tasks: Task[];\r\n    reserveTasks: Task[];\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    taskReserveButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    }\r\n}))\r\n\r\nexport default function Home({ tasks, reserveTasks }: Props) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isTaskReserveOpen, setIsTaskReserveOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            { auth.currentUser ?\r\n                <div>\r\n                    <TaskForm user={auth.currentUser}/>\r\n                    <TaskList tasks={tasks}/>\r\n                    <TaskReserve reserveTasks={reserveTasks} open={isTaskReserveOpen} user={auth.currentUser}/>\r\n                    <Fab \r\n                        color=\"primary\" \r\n                        aria-label=\"add\" \r\n                        title=\"Task Reserve\" \r\n                        className={classes.taskReserveButton}\r\n                        onClick={() => setIsTaskReserveOpen(state => !state)}\r\n                    >\r\n                        <ListAlt/>\r\n                    </Fab>\r\n                </div>\r\n                :\r\n                <h2>Please Sign Up or Sign In</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { AppBar, Toolbar, Typography, Link as LinkUi, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport { auth } from '../firebase/config'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    link: {\r\n        color: 'inherit',\r\n        cursor: 'pointer',\r\n        margin: theme.spacing(0, 1),\r\n        textTransform: 'uppercase'\r\n    },\r\n\r\n    activeLink: {\r\n        color: '#DDD',\r\n        textDecoration: 'underline'\r\n    },\r\n\r\n    toolbar: {\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    userInfo: {\r\n        flexGrow: 1,\r\n        textAlign: 'left'\r\n    }\r\n}))\r\n\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography className={classes.userInfo}>\r\n                    {auth.currentUser?.email}\r\n                </Typography>\r\n                <nav>\r\n                    {!auth.currentUser ?\r\n                        <>\r\n                            <NavLink to=\"/signup\" className={classes.link} activeClassName={classes.activeLink}>Sign Up</NavLink>\r\n                            <NavLink to=\"/signin\" className={classes.link} activeClassName={classes.activeLink}>Sign In</NavLink>\r\n                        </>\r\n                        :           \r\n                        <LinkUi color=\"inherit\" className={classes.link} onClick={() => auth.signOut()}>Sign Out</LinkUi>\r\n                    }\r\n                </nav>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport Home from './pages/Home';\n\nimport Header from './components/Header';\n\nimport './App.css';\nimport { auth, firestore } from './firebase/config';\nimport { Task } from './types';\nimport theme from './theme';\n\nconst App = () => {\n\n  const [user, setUser] = useState(auth.currentUser)\n  const [tasks, setTasks] = useState<Task[]>([])\n  const [reserveTasks, setReserveTasks] = useState<Task[]>([])\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setUser(user);\n    })\n  }, [])\n\n  useEffect(() => {\n    if(user){\n      firestore.collection('tasks')\n        .where('user', '==', user.uid)\n        .onSnapshot((snapshot) => {\n          let tasks: Task[] = snapshot.docs.map(docSnapshot => {\n            let task: Task = {\n              id: docSnapshot.id,\n              user: user.uid,\n              title: 'Unavailable',\n              description: 'Unavailable',\n              timeFrame: 'Unavailable',\n              ...docSnapshot.data(),\n            };\n            return task;\n          })\n          setTasks(tasks);\n        })\n\n      firestore.collection('reserveTasks')\n        .where('user', '==', user.uid)\n        .onSnapshot((snapshot) => {\n          let reserveTasks: Task[] = snapshot.docs.map(docSnapshot => {\n            let reserveTask: Task = {\n              id: docSnapshot.id,\n              user: user.uid,\n              title: 'Unavailable',\n              description: 'Unavailable',\n              timeFrame: 'Unavailable',\n              ...docSnapshot.data(),\n            };\n            return reserveTask;\n          })\n          setReserveTasks(reserveTasks);\n        })\n    }\n  }, [user])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Router>\n          <Header/>\n\n          <div>{error}</div>\n\n          <Switch>\n            <Route exact path=\"/\">\n              <Home tasks={tasks} reserveTasks={reserveTasks}/>\n            </Route>\n\n            <Route exact path=\"/signup\">\n              { user ? <Redirect to=\"/\"/> : <SignUp setError={setError}/>}\n            </Route>\n\n            <Route exact path=\"/signin\">\n              { user ? <Redirect to=\"/\"/> : <SignIn setError={setError}/>}\n            </Route> \n          </Switch>\n\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}