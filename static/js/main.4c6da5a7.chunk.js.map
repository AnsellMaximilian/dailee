{"version":3,"sources":["firebase/config.tsx","pages/SignUp.tsx","pages/SignIn.tsx","components/TaskForm.tsx","components/TaskDetail.tsx","components/CheckBox.tsx","components/TaskItem.tsx","components/TaskList.tsx","theme.ts","components/TaskReserveItem.tsx","components/TaskReserve.tsx","images/logo-with-text.png","pages/Home.tsx","components/Header.tsx","components/Message.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignUp","setMessage","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","Container","maxWidth","onSubmit","preventDefault","createUserWithEmailAndPassword","then","type","content","catch","err","message","TextField","required","fullWidth","margin","variant","label","onChange","Button","color","SignIn","signInWithEmailAndPassword","useStyles","makeStyles","theme","toggleButton","backgroundColor","palette","grey","borderRadius","formContainer","spacing","formMode","display","justifyContent","flexDirection","TaskForm","user","classes","title","setTitle","description","setDescription","timeFrame","setTimeFrame","isFormOpen","setIsFormOpen","setformMode","onClick","state","className","Typography","Collapse","in","RadioGroup","aria-label","FormControlLabel","control","Radio","task","uid","collection","add","Grid","container","item","xs","multiline","placeholder","TaskDetail","open","handleClose","saveChange","Dialog","onClose","DialogTitle","DialogContent","id","checkBox","position","checked","top","right","transform","CheckBox","completeTask","IconButton","CheckBoxOutlineBlank","Stop","fontSize","taskItem","transition","action","hover","deleted","detail","whiteSpace","textAlign","padding","shape","border","divider","TaskItem","isOpen","setOpenTask","setOpenTaskDetail","setChecked","primaryText","ListItem","button","ListItemIcon","stopPropagation","Promise","resolve","reject","setTimeout","doc","delete","ListItemText","primary","ListItemSecondaryAction","Edit","Box","TaskList","tasks","openTask","openTaskDetail","taskItems","map","List","style","overflowX","filter","update","createMuiTheme","main","secondary","reserveTaskItem","TaskReserveItem","reserveTask","setDeleted","Publish","Delete","header","contrastText","borderTopLeftRadius","borderTopRightRadius","bottom","maxHeight","minHeight","boxShadow","shadows","width","breakpoints","values","sm","up","list","overflowY","TaskReserve","reserveTasks","setIsTaskReserveOpen","reserveTaskItems","Slide","direction","window","innerWidth","mountOnEnter","unmountOnExit","ClickAwayListener","onClickAway","p","length","dense","taskReserveButton","logoWithText","link","fontWeight","textDecoration","Home","isTaskReserveOpen","currentUser","Fab","ListAlt","m","src","alt","to","process","cursor","textTransform","activeLink","toolbar","flexWrap","userInfo","flexGrow","Header","AppBar","Toolbar","Link","signOut","activeClassName","error","info","success","Message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","App","setUser","setTasks","setReserveTasks","useEffect","onAuthStateChanged","where","onSnapshot","snapshot","docs","docSnapshot","data","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c6da5a7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBkrMYcTX_d_K8SF-bFjpSFWNRTx6-jAcc\",\r\n    authDomain: \"dailee-f3d58.firebaseapp.com\",\r\n    projectId: \"dailee-f3d58\",\r\n    storageBucket: \"dailee-f3d58.appspot.com\",\r\n    messagingSenderId: \"903265997201\",\r\n    appId: \"1:903265997201:web:ea526b1fb4f9c122608a30\"\r\n}\r\n    // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth, firestore}","import { Button, Container, TextField } from '@material-ui/core';\r\nimport React, {useState} from 'react'\r\nimport {auth} from '../firebase/config';\r\nimport { Message } from '../types';\r\n\r\ninterface Props {\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>\r\n}\r\n\r\nexport default function SignUp({setMessage}: Props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(() => setMessage({type: 'success', content: 'Success'}))\r\n            .catch((err: {message: string}) => setMessage({type: 'error', content: err.message}));\r\n    }\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if(e.target.name === \"email\") setEmail(e.target.value);\r\n        else if(e.target.name === \"password\") setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField required fullWidth type=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" name=\"email\" value={email} onChange={handleChange}/>\r\n                <TextField required fullWidth type=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" name=\"password\" value={password} onChange={handleChange}/>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign Up</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {auth} from '../firebase/config';\r\nimport { Button, Container, TextField } from '@material-ui/core'\r\nimport { Message } from '../types';\r\n\r\ninterface Props {\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>\r\n}\r\n\r\nexport default function SignIn({setMessage}: Props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(() => setMessage({type: 'success', content: 'Success'}))\r\n            .catch((err: {message: string}) => setMessage({type: 'error', content: err.message}));\r\n    }\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if(e.target.name === \"email\") setEmail(e.target.value);\r\n        else if(e.target.name === \"password\") setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField required fullWidth type=\"email\" margin=\"normal\" variant=\"outlined\" label=\"Email\" name=\"email\" value={email} onChange={handleChange}/>\r\n                <TextField required fullWidth type=\"password\" margin=\"normal\" variant=\"outlined\" label=\"Password\" name=\"password\" value={password} onChange={handleChange}/>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign In</Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\nimport firebase from 'firebase';\r\nimport { Button, Collapse, Container, FormControlLabel, Grid, makeStyles, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\n// import { ExpandMore } from '@material-ui/icons';\r\n\r\ninterface Props {\r\n    user: firebase.User\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toggleButton: {\r\n        backgroundColor: theme.palette.grey[50],\r\n        borderRadius: 0\r\n    },\r\n\r\n    formContainer: {\r\n        margin: theme.spacing(2, 'auto')\r\n    },\r\n\r\n    formMode: {\r\n        display: 'flex',\r\n        justifyContent: 'start',\r\n        flexDirection: 'row'\r\n    }\r\n}))\r\n\r\nexport default function TaskForm({user}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [timeFrame, setTimeFrame] = useState('');\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    const [formMode, setformMode] = useState<'tasks' | 'reserveTasks'>('tasks');\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (e) => {\r\n        let value = e.target.value\r\n\r\n        if(e.target.name === 'title') setTitle(value)\r\n        else if(e.target.name === 'description') setDescription(value)\r\n        else if(e.target.name === 'time-frame') setTimeFrame(value)\r\n    }\r\n\r\n    const handleFormModeChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        let value: 'tasks' | 'reserveTasks' = e.target.value === 'reserveTasks' ? 'reserveTasks' : 'tasks';\r\n        setformMode(value); \r\n    };\r\n\r\n    const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n\r\n        let task = { \r\n            user: user.uid,\r\n            title,\r\n            description,\r\n            timeFrame\r\n        }\r\n\r\n        firestore.collection(formMode).add(task)\r\n            .then()\r\n            .catch();\r\n        \r\n        setTitle('');\r\n        setDescription('');\r\n        setTimeFrame('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button \r\n                fullWidth\r\n                variant=\"contained\"\r\n                onClick={() => setIsFormOpen(state => !state)}\r\n                className={classes.toggleButton}\r\n            >\r\n                <Typography>Create Task</Typography>\r\n            </Button>\r\n            <Collapse in={isFormOpen}>\r\n                <Container maxWidth=\"xs\" className={classes.formContainer}>\r\n                    <RadioGroup \r\n                        aria-label=\"formMode\" \r\n                        name=\"form-mode\" \r\n                        value={formMode} \r\n                        onChange={handleFormModeChange}\r\n                        className={classes.formMode}\r\n                    >\r\n                        <FormControlLabel value=\"tasks\" control={<Radio />} label=\"Tasks\" />\r\n                        <FormControlLabel value=\"reserveTasks\" control={<Radio />} label=\"Reserve Tasks\" />\r\n                    </RadioGroup>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth \r\n                                    variant=\"outlined\" \r\n                                    type=\"text\" \r\n                                    name=\"title\" \r\n                                    label=\"Task Title\" \r\n                                    onChange={handleChange} \r\n                                    value={title}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\" \r\n                                    type=\"time\" \r\n                                    name=\"time-frame\" \r\n                                    onChange={handleChange} \r\n                                    value={timeFrame} \r\n                                />\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\" \r\n                                    multiline \r\n                                    name=\"description\" \r\n                                    placeholder=\"Task Description\" \r\n                                    onChange={handleChange} \r\n                                    value={description}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">Add</Button>\r\n                            </Grid>\r\n                            \r\n                            \r\n                        </Grid>\r\n                    </form>\r\n                </Container>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Dialog, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Task } from '../types'\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    task: Task;\r\n    handleClose: ((event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void);\r\n    saveChange: (task: Task) => void;\r\n}\r\n\r\nexport default function TaskDetail({open, task, handleClose, saveChange}: Props) {\r\n\r\n    const [title, setTitle] = useState(task.title);\r\n    const [description, setDescription] = useState(task.description);\r\n    const [timeFrame, setTimeFrame] = useState(task.timeFrame);\r\n\r\n    const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (e) => {\r\n        let value = e.target.value\r\n\r\n        if(e.target.name === 'title') setTitle(value)\r\n        else if(e.target.name === 'description') setDescription(value)\r\n        else if(e.target.name === 'time-frame') setTimeFrame(value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        saveChange({\r\n            id: task.id,\r\n            user: task.user,\r\n            title,\r\n            description,\r\n            timeFrame\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle>\r\n                Edit Task\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <div>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={8}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth \r\n                                variant=\"outlined\" \r\n                                type=\"text\" \r\n                                name=\"title\" \r\n                                label=\"Task Title\" \r\n                                onChange={handleChange} \r\n                                value={title}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                type=\"time\" \r\n                                name=\"time-frame\" \r\n                                onChange={handleChange} \r\n                                value={timeFrame} \r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                variant=\"outlined\" \r\n                                multiline \r\n                                name=\"description\" \r\n                                placeholder=\"Task Description\" \r\n                                onChange={handleChange} \r\n                                value={description}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button fullWidth type=\"submit\" color=\"primary\" onClick={handleClick}>Save Changes</Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { IconButton, makeStyles } from '@material-ui/core'\r\nimport { CheckBoxOutlineBlank, Stop } from '@material-ui/icons'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    checked: boolean;\r\n    completeTask: React.MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    checkBox: {\r\n        position: 'relative'\r\n    },\r\n\r\n    checked: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        right: \"50%\",\r\n        transform: \"translate(50%, -50%)\"\r\n    }\r\n}))\r\n\r\nexport default function CheckBox({checked, completeTask}: Props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <IconButton className={classes.checkBox} onClick={completeTask}>\r\n            <CheckBoxOutlineBlank color=\"primary\" />\r\n            {checked && <Stop color=\"primary\" className={classes.checked} fontSize=\"small\"/>}\r\n        </IconButton>\r\n    )\r\n}\r\n","import { Box, Collapse, IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, makeStyles, Typography } from '@material-ui/core'\r\nimport { Edit as EditIcon } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config'\r\nimport { Task } from '../types'\r\nimport CheckBox from './CheckBox'\r\n\r\ninterface Props {\r\n    isOpen: boolean;\r\n    task: Task;\r\n    setOpenTask: React.Dispatch<React.SetStateAction<string>>;\r\n    setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    taskItem: {\r\n        transition: \"transform 0.5s\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    deleted: {\r\n        transform: \"translateX(200%)\",\r\n        position: \"relative\"\r\n    },\r\n\r\n    detail: {\r\n        whiteSpace: 'pre-line',\r\n        textAlign: 'left',\r\n        padding: theme.spacing(0, 4),\r\n        borderRadius: theme.shape.borderRadius,\r\n        border: `1.5px solid ${theme.palette.divider}`\r\n    },\r\n\r\n    timeFrame: {\r\n        color: theme.palette.grey[500],\r\n        fontSize: \"0.85rem\"\r\n    }\r\n}))\r\n\r\nexport default function TaskItem({task, isOpen, setOpenTask, setOpenTaskDetail}: Props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const completeTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.stopPropagation();\r\n        setChecked(true);\r\n        (new Promise<void>((resolve, reject) => {\r\n            setTimeout(() => resolve(), 500)\r\n        })).then(() => {\r\n            firestore.collection('tasks').doc(task.id).delete();\r\n        })\r\n    }\r\n\r\n    const toggleDetails = () => {\r\n        // if details already open; close\r\n        if(isOpen) setOpenTask('');\r\n        else setOpenTask(task.id);\r\n    }\r\n\r\n    const primaryText = (\r\n        <span>\r\n            {task.title}\r\n            {!!(task.timeFrame && task.timeFrame !== \"00:00\" ) && <span className={classes.timeFrame}> - {task.timeFrame}</span>}\r\n        </span>\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <ListItem button className={`${classes.taskItem} ${checked && classes.deleted}`} onClick={toggleDetails}>\r\n            <ListItemIcon>  \r\n                <CheckBox checked={checked} completeTask={completeTask}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={primaryText}/>\r\n            <ListItemSecondaryAction>\r\n                <IconButton onClick={() => setOpenTaskDetail(task.id)}>\r\n                    <EditIcon color=\"primary\"/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n         <Collapse in={isOpen}>\r\n            <Box className={task.description && classes.detail}>\r\n                <Typography>\r\n                    {task.description}\r\n                </Typography>\r\n            </Box>\r\n            {/* <Box className={task.description && classes.detail} borderTop={0}>\r\n                <Typography>\r\n                    {task.description}\r\n                </Typography>\r\n            </Box> */}\r\n        </Collapse>\r\n        </>\r\n    )\r\n}\r\n","import { Container, List } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\nimport { Task } from '../types'\r\nimport TaskDetail from './TaskDetail';\r\nimport TaskItem from './TaskItem'\r\n\r\nexport default function TaskList({tasks}: {tasks: Task[]}) {\r\n    // which task is expanded -- details are revealed\r\n    const [openTask, setOpenTask] = useState('');\r\n    const [openTaskDetail, setOpenTaskDetail] = useState('');\r\n\r\n    const handleTaskDetailClose = () => setOpenTaskDetail('');\r\n\r\n    const saveChange = (task: Task) => {\r\n        firestore.collection('tasks').doc(task.id).update(task);\r\n        setOpenTaskDetail('');\r\n    }\r\n\r\n    const taskItems = tasks.map(task => (\r\n        <TaskItem \r\n            task={task} \r\n            key={task.id} \r\n            isOpen={openTask === task.id}\r\n            setOpenTask={setOpenTask}\r\n            setOpenTaskDetail={setOpenTaskDetail}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <List style={{overflowX: \"hidden\"}}>\r\n                {taskItems}\r\n            </List>\r\n            {!!openTaskDetail &&\r\n                <TaskDetail \r\n                    task={tasks.filter(task => task.id === openTaskDetail)[0]} \r\n                    open={!!openTaskDetail}\r\n                    handleClose={handleTaskDetailClose}\r\n                    saveChange={saveChange}\r\n                />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2a7fff',\r\n    },\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport default theme;","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core'\r\nimport { Delete, Publish } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { firestore } from '../firebase/config'\r\nimport { Task, Message } from '../types'\r\nimport firebase from 'firebase'\r\n\r\ninterface Props {\r\n    reserveTask: Task;\r\n    user: firebase.User;\r\n    setOpenTaskDetail: React.Dispatch<React.SetStateAction<string>>;\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    reserveTaskItem: {\r\n        transition: \"all 0.5s\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    deleted: {\r\n        transform: \"translateX(-200%)\",\r\n        position: \"relative\"\r\n    }\r\n}))\r\n\r\nexport default function TaskReserveItem({reserveTask, user, setOpenTaskDetail, setMessage}: Props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [deleted, setDeleted] = useState(false)\r\n\r\n    const deleteReserveTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.stopPropagation();\r\n        setDeleted(true);\r\n\r\n        setTimeout(() => {\r\n            firestore.collection('reserveTasks').doc(reserveTask.id).delete();\r\n        }, 500);\r\n    }\r\n\r\n    const transferReserveTask: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.stopPropagation();\r\n        firestore.collection('tasks').add({\r\n            title: reserveTask.title,\r\n            description: reserveTask.description,\r\n            timeFrame: reserveTask.timeFrame,\r\n            user: user.uid\r\n        })\r\n        .then(() => {\r\n            setMessage({type: \"success\", content: `Reserve Task \"${reserveTask.title}\" Transferred to Tasks`})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ListItem button className={`${classes.reserveTaskItem} ${deleted && classes.deleted}`} onClick={() => setOpenTaskDetail(reserveTask.id)}>\r\n            <ListItemIcon>\r\n                <IconButton color=\"primary\" onClick={transferReserveTask}>\r\n                    <Publish/>\r\n                </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText>{reserveTask.title}</ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <IconButton style={{color: 'red'}} onClick={deleteReserveTask}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n","import { Box, ClickAwayListener, Container, List, makeStyles, Slide, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport theme from '../theme'\r\nimport { Task, Message } from '../types'\r\nimport TaskReserveItem from './TaskReserveItem'\r\nimport firebase from 'firebase'\r\nimport { firestore } from '../firebase/config'\r\nimport TaskDetail from './TaskDetail'\r\n\r\ninterface Props {\r\n    reserveTasks: Task[];\r\n    open: boolean;\r\n    user: firebase.User;\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n    setIsTaskReserveOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    container: {\r\n        backgroundColor: theme.palette.grey[50],\r\n        position: 'fixed',\r\n        bottom: 50,\r\n        maxHeight: '100vh',\r\n        minHeight: 150,\r\n        boxShadow: theme.shadows[3],\r\n        padding: 0,\r\n        width: '85%',\r\n        margin: '0 7.5%',\r\n        maxWidth: theme.breakpoints.values.sm,\r\n        borderRadius: theme.shape.borderRadius,\r\n        [theme.breakpoints.up('sm')]:{\r\n            right: 0\r\n        }\r\n    },\r\n\r\n    list: {\r\n        overflowY: 'auto',\r\n        maxHeight: '75vh'\r\n    }\r\n}))\r\n\r\nexport default function TaskReserve({reserveTasks, open, user, setMessage, setIsTaskReserveOpen}: Props) {\r\n    const classes = useStyles();\r\n\r\n    const [openTaskDetail, setOpenTaskDetail] = useState('');\r\n\r\n    const handleTaskDetailClose = () => setOpenTaskDetail('');\r\n\r\n    const saveChange = (reserveTask: Task) => {\r\n        firestore.collection('reserveTasks').doc(reserveTask.id).update(reserveTask);\r\n        setOpenTaskDetail('');\r\n    }\r\n\r\n    const reserveTaskItems = reserveTasks.map(task => (\r\n        <TaskReserveItem\r\n            setMessage={setMessage}\r\n            reserveTask={task} \r\n            key={task.id} \r\n            user={user}\r\n            setOpenTaskDetail={setOpenTaskDetail}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Slide direction={window.innerWidth >= theme.breakpoints.values.sm ? 'left' : 'up'} in={open} mountOnEnter unmountOnExit>\r\n            <Container className={classes.container}>\r\n                <ClickAwayListener onClickAway={() => setIsTaskReserveOpen(false)}>\r\n                    <div>\r\n                        <Box p={1} className={classes.header}>\r\n                            <Typography>Task Reserve</Typography>\r\n                        </Box>\r\n                        {reserveTasks.length > 0 ?\r\n                            <>\r\n                            <List dense className={classes.list}>\r\n                                {reserveTaskItems}\r\n                            </List>\r\n                            {!!openTaskDetail &&\r\n                                <TaskDetail \r\n                                    task={reserveTasks.filter(task => task.id === openTaskDetail)[0]} \r\n                                    open={!!openTaskDetail}\r\n                                    handleClose={handleTaskDetailClose}\r\n                                    saveChange={saveChange}\r\n                                />\r\n                            }\r\n                            </>\r\n                            :\r\n                            <Typography>Get Yo Tasks</Typography>\r\n                        }\r\n                    </div>\r\n                </ClickAwayListener>\r\n            </Container>\r\n        </Slide>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-with-text.c75d9ea7.png\";","import React, { useState } from 'react'\r\nimport { auth } from '../firebase/config'\r\n\r\nimport TaskForm from '../components/TaskForm'\r\nimport { Message, Task } from '../types'\r\nimport TaskList from '../components/TaskList'\r\nimport { Box, Button, Fab, makeStyles } from '@material-ui/core'\r\nimport { ListAlt } from '@material-ui/icons'\r\nimport TaskReserve from '../components/TaskReserve'\r\n\r\nimport logoWithText from '../images/logo-with-text.png';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ninterface Props {\r\n    tasks: Task[];\r\n    reserveTasks: Task[];\r\n    setMessage: React.Dispatch<React.SetStateAction<Message | null>>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    taskReserveButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n\r\n    logoWithText: {\r\n        maxWidth: '100%',\r\n        width: 300\r\n    },\r\n\r\n    link: {\r\n        fontWeight: 'bold',\r\n        '&:hover': {\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function Home({ tasks, reserveTasks, setMessage }: Props) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isTaskReserveOpen, setIsTaskReserveOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            { auth.currentUser ?\r\n                <div>\r\n                    <TaskForm user={auth.currentUser}/>\r\n                    <TaskList tasks={tasks}/>\r\n                    <TaskReserve \r\n                        reserveTasks={reserveTasks} \r\n                        open={isTaskReserveOpen} \r\n                        user={auth.currentUser} \r\n                        setMessage={setMessage}\r\n                        setIsTaskReserveOpen={setIsTaskReserveOpen}\r\n                    />\r\n                    <Fab \r\n                        color=\"primary\" \r\n                        aria-label=\"add\" \r\n                        title=\"Task Reserve\" \r\n                        className={classes.taskReserveButton}\r\n                        onClick={() => setIsTaskReserveOpen(state => !state)}\r\n                    >\r\n                        <ListAlt/>\r\n                    </Fab>\r\n                </div>\r\n                :\r\n                <Box m={2}>\r\n                    <img src={logoWithText} alt=\"logo with text\" className={classes.logoWithText}/>\r\n                    <h2>\r\n                        <Button variant=\"contained\" color=\"primary\"><NavLink to={process.env.PUBLIC_URL + \"/signup\"} className={classes.link}>Sign Up</NavLink></Button> or <Button variant=\"contained\" color=\"primary\"><NavLink to={process.env.PUBLIC_URL + \"/signin\"} className={classes.link}>Sign In</NavLink></Button>\r\n                    </h2>\r\n                </Box>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { AppBar, Toolbar, Typography, Link as LinkUi, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport { auth } from '../firebase/config'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    link: {\r\n        color: 'inherit',\r\n        cursor: 'pointer',\r\n        margin: theme.spacing(0, 1),\r\n        textTransform: 'uppercase'\r\n    },\r\n\r\n    activeLink: {\r\n        color: '#DDD',\r\n        textDecoration: 'underline'\r\n    },\r\n\r\n    toolbar: {\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    userInfo: {\r\n        flexGrow: 1,\r\n        textAlign: 'left'\r\n    }\r\n}))\r\n\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography className={classes.userInfo}>\r\n                    {auth.currentUser?.email}\r\n                </Typography>\r\n                <nav>\r\n                    {!auth.currentUser ?\r\n                        <>\r\n                            <NavLink to={process.env.PUBLIC_URL + \"/signup\"} className={classes.link} activeClassName={classes.activeLink}>Sign Up</NavLink>\r\n                            <NavLink to={process.env.PUBLIC_URL + \"/signin\"} className={classes.link} activeClassName={classes.activeLink}>Sign In</NavLink>\r\n                        </>\r\n                        :           \r\n                        <LinkUi color=\"inherit\" className={classes.link} onClick={() => auth.signOut()}>Sign Out</LinkUi>\r\n                    }\r\n                </nav>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Box, makeStyles, Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Message as MessageType} from '../types'\r\n\r\ninterface Props {\r\n    message: MessageType | null;\r\n    open: boolean\r\n    handleClose: ((event: React.SyntheticEvent<any, Event>) => void)\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    message: {\r\n        color: theme.palette.grey[50],\r\n        padding: theme.spacing(1),\r\n        borderRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    error: {\r\n        backgroundColor: theme.palette.error.main\r\n    },\r\n\r\n    info: {\r\n        backgroundColor: theme.palette.info.main\r\n    },\r\n\r\n    success: {\r\n        backgroundColor: theme.palette.success.main\r\n    }\r\n}))\r\n\r\nexport default function Message({message, open, handleClose}: Props) {\r\n    const classes = useStyles();\r\n    if(message) {\r\n        let className: string;\r\n        switch (message.type) {\r\n            case 'error':\r\n                className = classes.error;\r\n                break;\r\n            case 'success':\r\n                className = classes.success;\r\n                break;\r\n            case 'info':\r\n                className = classes.info;\r\n                break;\r\n            default:\r\n                className = classes.info;\r\n                break;\r\n        }\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                // message={message.content}\r\n                // className={classes.message}\r\n            >\r\n                <Box className={`${classes.message} ${className}`}>\r\n                    {message.content}\r\n                </Box>\r\n            </Snackbar>\r\n        )\r\n    }\r\n        \r\n    return null;\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport Home from './pages/Home';\n\nimport Header from './components/Header';\n\nimport './App.css';\nimport { auth, firestore } from './firebase/config';\nimport { Message as MessageType, Task } from './types';\nimport theme from './theme';\nimport Message from './components/Message';\n\nconst App = () => {\n\n  const [user, setUser] = useState(auth.currentUser)\n  const [tasks, setTasks] = useState<Task[]>([])\n  const [reserveTasks, setReserveTasks] = useState<Task[]>([])\n  const [message, setMessage] = useState<MessageType | null>(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setUser(user);\n    })\n  }, [])\n\n  useEffect(() => {\n    if(user){\n      firestore.collection('tasks')\n        .where('user', '==', user.uid)\n        .onSnapshot((snapshot) => {\n          let tasks: Task[] = snapshot.docs.map(docSnapshot => {\n            let task: Task = {\n              id: docSnapshot.id,\n              user: user.uid,\n              title: 'Unavailable',\n              description: 'Unavailable',\n              timeFrame: 'Unavailable',\n              ...docSnapshot.data(),\n            };\n            return task;\n          })\n          setTasks(tasks);\n        })\n\n      firestore.collection('reserveTasks')\n        .where('user', '==', user.uid)\n        .onSnapshot((snapshot) => {\n          let reserveTasks: Task[] = snapshot.docs.map(docSnapshot => {\n            let reserveTask: Task = {\n              id: docSnapshot.id,\n              user: user.uid,\n              title: 'Unavailable',\n              description: 'Unavailable',\n              timeFrame: 'Unavailable',\n              ...docSnapshot.data(),\n            };\n            return reserveTask;\n          })\n          setReserveTasks(reserveTasks);\n        })\n    }\n  }, [user])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Router>\n          <Header/>\n\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n              <Home \n                tasks={tasks} \n                reserveTasks={reserveTasks}\n                setMessage={setMessage}\n              />\n            </Route>\n\n            <Route exact path={process.env.PUBLIC_URL + \"/signup\"}>\n              { user ? <Redirect to={process.env.PUBLIC_URL + \"/\"}/> : <SignUp setMessage={setMessage}/>}\n            </Route>\n\n            <Route exact path={process.env.PUBLIC_URL + \"/signin\"}>\n              { user ? <Redirect to={process.env.PUBLIC_URL + \"/\"}/> : <SignIn setMessage={setMessage}/>}\n            </Route> \n          </Switch>\n          <Message \n            open={!!message} \n            message={message}\n            handleClose={() => {\n              setMessage(null);\n            }}\n          />\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}